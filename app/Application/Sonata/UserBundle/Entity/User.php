<?php

/**
 * This file is part of the <name> project.
 *
 * (c) <yourname> <youremail>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Application\Sonata\UserBundle\Entity;

use Sonata\UserBundle\Entity\BaseUser as BaseUser;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * This file has been generated by the Sonata EasyExtends bundle ( http://sonata-project.org/bundles/easy-extends )
 *
 * References :
 *   working with object : http://www.doctrine-project.org/projects/orm/2.0/docs/reference/working-with-objects/en
 *
 * @author <yourname> <youremail>
 */
class User extends BaseUser
{
    /**
     * @var integer $id
     */
    protected $id;

    private $children;

    private $parent;
    private $sites;
    private $tasks;
    private $sites_for_km;
    private $sites_for_editor;

    public function __construct()
    {
        $this->children = new ArrayCollection();
        $this->sites = new ArrayCollection();
        $this->tasks = new ArrayCollection();
        $this->sites_for_km = new ArrayCollection();
        $this->sites_for_editor = new ArrayCollection();
        parent::__construct();
    }

    /**
     * Get id
     *
     * @return integer $id
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set children
     *
     * @param ArrayCollection|array $children
     * @return User
     */
    public function setChildren($children)
    {
        $this->children = $children;

        return $this;
    }

    /**
     * Get children
     *
     * @return ArrayCollection|array
     */
    public function getChildren()
    {
        return $this->children;
    }

    /**
     * Set parent
     *
     * @param User $parent
     * @return User
     */
    public function setParent($parent)
    {
        $this->parent = $parent;

        return $this;
    }

    /**
     * Get parent
     *
     * @return User|null
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Add children
     *
     * @param \Application\Sonata\UserBundle\Entity\User $children
     * @return User
     */
    public function addChild(\Application\Sonata\UserBundle\Entity\User $children)
    {
        $this->children[] = $children;

        return $this;
    }

    /**
     * Remove children
     *
     * @param \Application\Sonata\UserBundle\Entity\User $children
     */
    public function removeChild(\Application\Sonata\UserBundle\Entity\User $children)
    {
        $this->children->removeElement($children);
    }

    /**
     * Add sites
     *
     * @param \Acme\DemoBundle\Entity\Site $sites
     * @return User
     */
    public function addSite(\Acme\DemoBundle\Entity\Site $sites)
    {
        $this->sites[] = $sites;

        return $this;
    }

    /**
     * Remove sites
     *
     * @param \Acme\DemoBundle\Entity\Site $sites
     */
    public function removeSite(\Acme\DemoBundle\Entity\Site $sites)
    {
        $this->sites->removeElement($sites);
    }

    /**
     * Get sites
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getSites()
    {
        return $this->sites;
    }

    /**
     * Add sites_for_km
     *
     * @param \Acme\DemoBundle\Entity\Site $sitesForKm
     * @return User
     */
    public function addSitesForKm(\Acme\DemoBundle\Entity\Site $sitesForKm)
    {
        $this->sites_for_km[] = $sitesForKm;

        return $this;
    }

    /**
     * Remove sites_for_km
     *
     * @param \Acme\DemoBundle\Entity\Site $sitesForKm
     */
    public function removeSitesForKm(\Acme\DemoBundle\Entity\Site $sitesForKm)
    {
        $this->sites_for_km->removeElement($sitesForKm);
    }

    /**
     * Get sites_for_km
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getSitesForKm()
    {
        return $this->sites_for_km;
    }

    /**
     * Add sites_for_editor
     *
     * @param \Acme\DemoBundle\Entity\Site $sitesForEditor
     * @return User
     */
    public function addSitesForEditor(\Acme\DemoBundle\Entity\Site $sitesForEditor)
    {
        $this->sites_for_editor[] = $sitesForEditor;

        return $this;
    }

    /**
     * Remove sites_for_editor
     *
     * @param \Acme\DemoBundle\Entity\Site $sitesForEditor
     */
    public function removeSitesForEditor(\Acme\DemoBundle\Entity\Site $sitesForEditor)
    {
        $this->sites_for_editor->removeElement($sitesForEditor);
    }

    /**
     * Get sites_for_editor
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getSitesForEditor()
    {
        return $this->sites_for_editor;
    }
}
